# -*- coding: utf-8 -*-
"""
/***************************************************************************
 RelationManager
                                 A QGIS plugin
 this plugin helps in the management of 1:N project relations
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-10-03
        copyright            : (C) 2024 by Federico Gianoli
        email                : gianoli.federico@gmail.com
        git sha              : $Format:%H$
 ***************************************************************************/

 /***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
 This script initializes the plugin, making it known to QGIS.
"""

from PyQt5.QtGui import QIcon

# noinspection PyPep8Naming
def classFactory(iface):  # pylint: disable=invalid-name
    """Load RelationManager class from file RelazioniPlugin.

    :param iface: A QGIS interface instance.
    :type iface: QgsInterface
    """
    from .RelazioniPlugin import RelazioniPlugin
    return RelazioniPlugin(iface)


class RelazioniPlugin:
    def __init__(self, iface):
        """Constructor."""
        self.iface = iface
        self.plugin_dir = os.path.dirname(__file__)
        self.action = None

    def initGui(self):
        """Create the menu entries and toolbar icons inside the QGIS GUI."""
        self.action = QAction(QIcon(':/plugins/relazioniplugin/icon.png'), "RelationManager", self.iface.mainWindow())
        self.action.triggered.connect(self.run)

        # Add toolbar button and menu entry
        self.iface.addToolBarIcon(self.action)
        self.iface.addPluginToMenu("&RelationManager", self.action)

    def unload(self):
        """Remove the plugin menu item and icon from QGIS GUI."""
        self.iface.removeToolBarIcon(self.action)
        self.iface.removePluginMenu("&RelationManager", self.action)

    def run(self):
        """Run method that performs all the real work."""
        # Display the plugin's main dialog
        dlg = RelazioniPluginDialog(self.iface)
        dlg.exec_()
